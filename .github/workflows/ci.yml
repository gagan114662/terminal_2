name: TermNet CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with ruff (fallback to flake8)
      run: |
        # Try ruff first, fallback to flake8 if not available
        if command -v ruff > /dev/null 2>&1; then
          echo "Using ruff for linting"
          ruff check . --select E,W,F --exclude __pycache__ --line-length 100
        else
          echo "Ruff not available, using flake8"
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude __pycache__
        fi

    - name: Test with pytest
      run: |
        pytest -q --tb=short

    - name: Upload coverage as artifact
      if: matrix.python-version == '3.12'  # Only upload once
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: .coverage
        if-no-files-found: ignore
        retention-days: 30

  audit-smoke:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    env:
      PYTHONUNBUFFERED: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt || true
          pip install requests pytest pytest-asyncio
      - name: Run auditor smoke
        env:
          DASHSCOPE_API_KEY: ${{ secrets.DASHSCOPE_API_KEY }}
        run: |
          pytest tests/test_auditor_smoke.py -q || exit 1