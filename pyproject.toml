[tool.black]
line-length = 88
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | \.svn
  | _build
  | buck-out
  | build
  | dist
  | env
  | venv
  | artifacts
)/
'''

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["termnet", "tests"]
skip_glob = ["*/migrations/*", "*/artifacts/*"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "I",   # isort
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by black
    "E722",  # bare except (we'll fix these gradually)
    "F841",  # local variable assigned but never used
    "B007",  # loop control variable not used
    "B008",  # do not perform function calls in argument defaults
    "B904",  # raise without from in except
    "SIM102", # nested if statements
    "SIM105", # use contextlib.suppress
    "SIM108", # use ternary operator
    "SIM117", # nested with statements
    "SIM118", # use key in dict instead of key in dict.keys()
    "C401",  # unnecessary generator
    "C416",  # unnecessary dict comprehension
    "TCH003", # move import into type-checking block
    "SIM110", # use any() instead of for loop
    "SIM115", # use context manager for opening files
    "SIM222", # use True instead of ... or True
    "E712",  # comparison to True/False
    "E402",  # module import not at top
    "UP035", # deprecated typing imports
    "UP038", # use X | Y in isinstance
    "F821",  # undefined name
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["F401", "F811"]

[tool.ruff.lint.isort]
known-first-party = ["termnet"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
